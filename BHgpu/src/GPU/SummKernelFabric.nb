(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     43102,        903]
NotebookOptionsPosition[     39406,        846]
NotebookOutlinePosition[     39901,        864]
CellTagsIndexPosition[     39858,        861]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "@", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.902325592013591*^9, 3.902325601770832*^9}},
 CellLabel->
  "In[401]:=",ExpressionUUID->"3e00c41d-0e7f-4aad-830e-4c05c869689a"],

Cell[BoxData["\<\"D:\\\\test\"\>"], "Output",
 CellChangeTimes->{
  3.9023256020981817`*^9, 3.902331850202937*^9, 3.902332617576275*^9, 
   3.9023327766911917`*^9, {3.9023328695521045`*^9, 3.9023328875407987`*^9}, 
   3.9023331841823626`*^9, 3.9023355428549175`*^9, 3.902338836191291*^9, 
   3.9023388720989857`*^9, 3.902339122901625*^9, 3.902410512953827*^9, 
   3.902681632567159*^9, 3.9026823060228868`*^9, 3.902682398790205*^9, 
   3.902708797746778*^9, 3.902708845364849*^9, 3.9027091750835886`*^9, 
   3.9027092180310073`*^9, 3.9027092976776066`*^9, 3.902709387896549*^9, 
   3.902709471423751*^9, {3.9027095162775*^9, 3.9027095438147545`*^9}, 
   3.9027098234581575`*^9},
 CellLabel->
  "Out[401]=",ExpressionUUID->"0375c954-240d-4f6e-800e-18a574bd8070"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GenerateVariables", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\"\<    register real2 mom\>\"", "<>", 
      RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\<;\>\""}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"n", "-", "1"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.902325410897542*^9, 3.902325481558976*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"51d43e12-c393-4a76-93a9-0edff96144c2"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"GenerateVariables", "[", "4", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.902325489861518*^9, 3.9023254901650877`*^9}, {
  3.9023383024812565`*^9, 3.902338305182171*^9}},
 CellLabel->
  "In[403]:=",ExpressionUUID->"36e228cd-8225-454d-937f-33b3d7f70acb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CopyGtoR", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<                         mom\>\"", "<>", 
       RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\< = momsd[nch + \>\"",
        "<>", 
       RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\<];\>\""}], ")"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"n", "-", "1"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.902328705158097*^9, 3.9023288216412573`*^9}, 
   3.9023318490545397`*^9, {3.902709214809183*^9, 3.902709215744335*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"a427fbef-7683-4bfb-9c1e-69540331444b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CopyGtoR", "[", "4", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9023287911844797`*^9, 3.9023287914130135`*^9}, {
  3.902338307743251*^9, 3.902338309220666*^9}},
 CellLabel->
  "In[405]:=",ExpressionUUID->"3fd0082f-7360-43f2-b288-5e7225c43dfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetToZero", "[", "n_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", ">", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<                         \>\"", "<>", 
       RowBox[{"(", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<mom\>\"", "<>", 
             RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\< = \>\""}], 
            ")"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            RowBox[{"n", "-", "1"}]}], "]"}]}], ")"}], ")"}], "<>", 
       "\"\<real2{ 0, 0 };\>\""}], "}"}], ",", 
     RowBox[{"{", "\"\<\>\"", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9023289269819164`*^9, 3.902329086693201*^9}, {
  3.9023292086258745`*^9, 3.9023292091014557`*^9}, {3.9023317005590734`*^9, 
  3.902331701519063*^9}, {3.902332851490996*^9, 3.902332885652816*^9}, {
  3.902709514892417*^9, 3.9027095152421713`*^9}, {3.9027097381566415`*^9, 
  3.9027097495024743`*^9}},
 CellLabel->
  "In[406]:=",ExpressionUUID->"c553399b-4712-4f19-b0a4-c57faa318b0a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"SetToZero", "[", "4", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.902329029468478*^9, 3.902329033814728*^9}, {
  3.902338313912603*^9, 3.902338315574202*^9}, {3.9027086851685534`*^9, 
  3.9027087055046854`*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"7a7b9cd7-66f6-43c1-ace7-6b264924bdfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InitRegs", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\"\<                     register real2 momh\>\"", "<>", 
      RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\< = mom\>\"", "<>", 
      RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\<;\>\""}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"n", "-", "1"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.902329214134823*^9, 3.9023292638597775`*^9}, {
  3.9027092963396993`*^9, 3.902709296643053*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"dd91bd49-a79c-4212-91a9-b44ce99a26d8"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"InitRegs", "[", "4", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9023292657602153`*^9, 3.9023292709103403`*^9}, {
  3.902338319139677*^9, 3.902338320547036*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"8b229178-983c-4219-82bd-97139638a3f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GenerateShiftFirst", "[", "n_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", ">", "1"}], ",", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<                     real2 z = dr;\>\"", ",", " ", 
        "\[IndentingNewLine]", "\"\<\>\""}], " ", "\[IndentingNewLine]", 
       "}"}], "~", "Join", "~", 
      RowBox[{
      "{", "\[IndentingNewLine]", 
       "\"\<                     momh1 += multz(mom0, z);\>\"", 
       "\[IndentingNewLine]", "}"}], "~", "Join", "~", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<                     momh\>\"", "<>", 
          RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\< += \>\"", "<>", 
          RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\< * multz(mom\>\"",
           "<>", 
          RowBox[{"TextString", "[", 
           RowBox[{"#", "-", "1"}], "]"}], "<>", "\"\<, z);\>\""}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"2", ",", 
          RowBox[{"n", "-", "1"}]}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", "\"\<\>\"", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9023293622383175`*^9, 3.9023294409552865`*^9}, 
   3.902329490075289*^9, {3.902329660878281*^9, 3.902329679258437*^9}, {
   3.9023331686389723`*^9, 3.9023331821780186`*^9}, {3.9023384269428225`*^9, 
   3.9023384352052336`*^9}, 3.902338807775174*^9, {3.9027093422034893`*^9, 
   3.9027093605898685`*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"f2069ed7-ce10-48d0-8995-581ec7cb028a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"GenerateShifts", "[", "4", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9023296806509066`*^9, 3.902329680843279*^9}, {
  3.9023383460726147`*^9, 3.9023383476917005`*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"9b4d96be-8f72-404c-87ad-47b6ebcc1fe3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateShiftMid", "[", 
   RowBox[{"n_", ",", "k_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<\>\"", ",", "\[IndentingNewLine]", 
     "\"\<                     z = multz(z, dr);\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\"\<                     momh\>\"", "<>", 
      RowBox[{"TextString", "[", "k", "]"}], "<>", 
      "\"\< += multz(mom0, z);\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<                     momh\>\"", "<>", 
      RowBox[{"TextString", "[", 
       RowBox[{"k", "+", "1"}], "]"}], "<>", "\"\< += \>\"", "<>", 
      RowBox[{"TextString", "[", 
       RowBox[{"k", "+", "1"}], "]"}], "<>", "\"\< * multz(mom1, z);\>\""}]}],
     "\[IndentingNewLine]", "}"}], "~", "Join", "~", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\"\<                        momh\>\"", "<>", 
        RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\< += binomCft[\>\"", 
        "<>", 
        RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\< * order + \>\"", "<>", 
        RowBox[{"TextString", "[", "k", "]"}], "<>", "\"\<] * multz(mom\>\"", 
        "<>", 
        RowBox[{"TextString", "[", 
         RowBox[{"#", "-", "k"}], "]"}], "<>", "\"\<, z);\>\""}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"k", "+", "2"}], ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], ")"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"\"\<                     momh\>\"", "<>", 
       RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\< += \>\"", "<>", 
       RowBox[{"TextString", "[", 
        RowBox[{"Binomial", "[", 
         RowBox[{"#", ",", "k"}], "]"}], "]"}], "<>", "\"\< * multz(mom\>\"", 
       "<>", 
       RowBox[{"TextString", "[", 
        RowBox[{"#", "-", "k"}], "]"}], "<>", "\"\<, z);\>\""}], "&"}], "/@", 
     
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"k", "+", "2"}], ",", 
       RowBox[{"n", "-", "1"}]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.9023298456341095`*^9, 3.9023299174989376`*^9}, {
  3.9023300212318134`*^9, 3.9023301477527905`*^9}, {3.9023301956026535`*^9, 
  3.9023302666368556`*^9}, {3.9023303136256714`*^9, 3.9023304194486036`*^9}, {
  3.902331744232232*^9, 3.902331745877037*^9}, {3.902410408168067*^9, 
  3.9024104140790644`*^9}, {3.902410480343639*^9, 3.9024104941036386`*^9}, {
  3.9027093682040462`*^9, 3.902709376406949*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"27474f31-cc01-4492-93aa-ddca25ac88bc"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9024104236690664`*^9, 3.902410473551608*^9}},
 CellLabel->
  "In[413]:=",ExpressionUUID->"91e0be06-e0bc-4c9f-a249-5c3782022b4e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"GenerateShiftMid", "[", 
   RowBox[{"16", ",", "3"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9023301536405945`*^9, 3.9023301587471952`*^9}, {
  3.902330436520665*^9, 3.902330436551482*^9}, {3.9023384452742205`*^9, 
  3.9023384472133627`*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"f18032f9-aeef-4e7b-8311-19b9a9728709"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"GenerateShiftMid", "[", 
       RowBox[{"16", ",", "k"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "2", ",", "14"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.902330510913497*^9, 3.90233057411217*^9}, {
  3.902338449655243*^9, 3.902338451661113*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"0cd7b9dd-841c-4d40-b66b-3159d7441458"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GenerateShiftLast", "[", "n_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", ">", "2"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<\>\"", ",", "\[IndentingNewLine]", 
       "\"\<                     z = multz(z, dr);\>\"", ",", " ", 
       "\[IndentingNewLine]", "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"\"\<                     momh\>\"", "<>", 
        RowBox[{"TextString", "[", 
         RowBox[{"n", "-", "1"}], "]"}], "<>", 
        "\"\< += multz(mom0, z);\>\""}]}], "}"}], ",", 
     RowBox[{"{", "\"\<\>\"", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9023307739193325`*^9, 3.9023307960401363`*^9}, {
  3.9023308430514755`*^9, 3.9023308494023304`*^9}, {3.9023317960947285`*^9, 
  3.9023317980430946`*^9}, {3.902332598212573*^9, 3.902332614448013*^9}, {
  3.9027093823163147`*^9, 3.9027093848061857`*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"98972aa3-88ec-4301-9b72-a617a1a28aab"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"GenerateShiftLast", "[", "16", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9023308050484734`*^9, 3.9023308059923*^9}, {
  3.9023384618244286`*^9, 3.9023384634780917`*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"69ba53d8-6eff-4790-a028-c374bd8a1c4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CopyRtoG", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<                     momsd[kch + \>\"", "<>", 
       RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\<] += momh\>\"", "<>", 
       RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\<;\>\""}], ")"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"n", "-", "1"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9023309298021927`*^9, 3.9023309815979013`*^9}, {
  3.902709438684847*^9, 3.9027094389870253`*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"bef774a4-b770-4f8b-a8aa-51a41988738c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CopyRtoG", "[", "4", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.902330986392254*^9, 3.902330987407669*^9}, {
  3.9023384706110535`*^9, 3.90233847254105*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"b5cc5c54-e0a7-4ec4-b852-d505fbe163f7"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.902330800989591*^9},
 CellLabel->
  "In[420]:=",ExpressionUUID->"1020a3e5-0eb7-4a04-9931-15509a83ad2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetFooText", "[", "n_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\</*--------------------------------*- BHgpu \
-*----------------*---------------*\\\\\n| #####   ##  ##                |    \
                        | Version 1.5    |\n| ##  ##  ##  ##   ####  ##  ## | \
 BHgpu: Barnes-Hut method  | 2023/08/29     |\n| #####   ######  ##     ##  \
## |  for 2D vortex particles   *----------------*\n| ##  ##  ##  ##  ##     \
##  ## |  Open Source Code                           |\n| #####   ##  ##   \
####   ####  |  https://www.github.com/vortexmethods/fastm |\n|               \
                                                              |\n| Copyright \
(C) 2020-2023 I. Marchevsky, E. Ryatina, A. Kolganova             |\n| \
Copyright (C) 2013, Texas State University-San Marcos. All rights reserved. |\
\n*---------------------------------------------------------------------------\
--*\n| File name: SummKer_n.cu                                                \
     |\n| Info: Source code of BHgpu                                          \
        |\n|                                                                  \
           |\n| This file is part of BHgpu.                                   \
              |\n| BHcu is free software: you can redistribute it and/or \
modify it             |\n| under the terms of the GNU General Public License \
as published by           |\n| the Free Software Foundation, either version 3 \
of the License, or           |\n| (at your option) any later version.         \
                                |\n|                                          \
                                   |\n| BHcu is distributed in the hope that \
it will be useful, but WITHOUT         |\n| ANY WARRANTY; without even the \
implied warranty of MERCHANTABILITY or       |\n| FITNESS FOR A PARTICULAR \
PURPOSE.  See the GNU General Public License       |\n| for more details.     \
                                                      |\n|                    \
                                                         |\n| You should have \
received a copy of the GNU General Public License           |\n| along with \
BHgpu.  If not, see <http://www.gnu.org/licenses/>.              |\n\
\\\\*-------------------------------------------------------------------------\
--*/\n\n/*!\n\\\\file\n\\\\brief \:0421\:0434\:0432\:0438\:0433 \:043c\:0443\
\:043b\:044c\:0442\:0438\:043f\:043e\:043b\:044c\:043d\:044b\:0445 \:043c\
\:043e\:043c\:0435\:043d\:0442\:043e\:0432 \:0434\:043b\:044f \:0441\:0445\
\:0435\:043c\:044b \:0441 order = \>\"", "<>", 
     RowBox[{"TextString", "[", "n", "]"}], "<>", 
     "\"\<\n\\\\author \:041c\:0430\:0440\:0447\:0435\:0432\:0441\:043a\:0438\
\:0439 \:0418\:043b\:044c\:044f \:041a\:043e\:043d\:0441\:0442\:0430\:043d\
\:0442\:0438\:043d\:043e\:0432\:0438\:0447\n\\\\author \:0420\:044f\:0442\
\:0438\:043d\:0430 \:0415\:0432\:0433\:0435\:043d\:0438\:044f \:041f\:0430\
\:0432\:043b\:043e\:0432\:043d\:0430\n\\\\author \:041a\:043e\:043b\:0433\
\:0430\:043d\:043e\:0432\:0430 \:0410\:043b\:0435\:043a\:0441\:0430\:043d\
\:0434\:0440\:0430 \:041e\:043b\:0435\:0433\:043e\:0432\:043d\:0430\n\
\\\\version 1.5\n\\\\date 29 \:0430\:0432\:0433\:0443\:0441\:0442\:0430 2023 \
\:0433.\n*/\n\n\>\""}], "}"}], "~", "Join", "~", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
    "\"\<__global__ \>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<__launch_bounds__(THREADS3, FACTOR3)\>\"", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<void SummarizationKernel2_\>\"", "<>", 
      RowBox[{"TextString", "[", "n", "]"}], "<>", "\"\<(\>\""}], ",", " ", 
     "\[IndentingNewLine]", 
     "\"\<    const int nnodesd, const int nbodiesd,\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<    const int2* __restrict Mchildd,\>\"", 
     ",", " ", "\[IndentingNewLine]", 
     "\"\<    volatile int* __restrict massd,\>\"", ",", " ", 
     "\[IndentingNewLine]", 
     "\"\<    real2* __restrict momsd,  //momsd  - \:0431\:0435\:0437 \
volatile\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<    const real3* __restrict vtxd, const int* __restrict \
MmortonCodesIdxd,\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<    const real2* __restrict Mposd, const int* __restrict \
MindexSortd, const int* __restrict MindexSortTd\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<)\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<{\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<    register int i, j, k, ch, inc, flag;\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<\>\""}], "\[IndentingNewLine]", "}"}], "~", 
   "Join", "~", 
   RowBox[{"GenerateVariables", "[", "n", "]"}], "~", "Join", "~", 
   RowBox[{
   "{", "\[IndentingNewLine]", "\"\<\>\"", " ", "\[IndentingNewLine]", "}"}], 
   "~", "Join", "~", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", ">", "1"}], ",", 
     RowBox[{"{", "\"\<    register real2 cen, dr;\>\"", "}"}], ",", 
     RowBox[{"{", "\"\<\>\"", "}"}]}], "]"}], "~", "Join", "~", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<    register int m, cm;\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<    inc = blockDim.x * gridDim.x;\>\"", ",", " ", 
     "\[IndentingNewLine]", 
     "\"\<    k = ((nnodesd - (nbodiesd - 1)) & (-WARPSIZE)) + threadIdx.x + \
blockIdx.x * blockDim.x;  // align to warp size\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<    if (k < (nnodesd - (nbodiesd - 1)))\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<        k += inc;\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
     "\"\<    //MortonTree:\>\"", ",", "\[IndentingNewLine]", 
     "\"\<    // 0 1 2 ... (nb-2) x (nb+0) (nb+1) (nb+2) ... (nb+(nb-1))\>\"",
      ",", "\[IndentingNewLine]", 
     "\"\<    // ----------------   -----------------------------------\>\"", 
     ",", "\[IndentingNewLine]", 
     "\"\<    //      cells                         bodies\>\"", ",", 
     "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
     "\"\<    //Martin's tree:\>\"", ",", "\[IndentingNewLine]", 
     "\"\<    // 0 1 2 ... (nb-1) x x x x (nn-(nb-1)) ... (nn-2) (nn-1)\>\"", 
     ",", "\[IndentingNewLine]", 
     "\"\<    // ----------------          ----------------------------\>\"", 
     ",", "\[IndentingNewLine]", 
     "\"\<    //      bodies                 sorted and reversed cells\>\"", 
     ",", "\[IndentingNewLine]", "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<    flag = 0;\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<    j = 0;\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<    // iterate over all cells assigned to thread\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<    while (k < nnodesd)\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<    {\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<        if (massd[nnodesd - 1 - k] >= 0)\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<        {\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<            k += inc;\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<        }\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<        else\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<        {\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<            j = 2;\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<            for (i = 0; i < 2; i++) {\>\"", 
     ",", " ", "\[IndentingNewLine]", "\"\<\>\"", ",", " ", 
     "\[IndentingNewLine]", 
     "\"\<                //computation of child[k*2+i]\>\"", ",", " ", 
     "\[IndentingNewLine]", 
     "\"\<                register const int srt = MindexSortd[(nnodesd - 1) \
- k];\>\"", ",", "\[IndentingNewLine]", 
     "\"\<                int chd = i * Mchildd[srt].y + (1-i) * \
Mchildd[srt].x;   // i==0 => .x;  i==1 => .y\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<                ch = (chd >= nbodiesd) ? chd - nbodiesd : (nnodesd \
- 1) - MindexSortTd[chd];\>\"", ",", "\[IndentingNewLine]", "\"\<\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<                if ((chd >= nbodiesd) || (massd[nnodesd - 1 - ch] \
>= 0))\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<                    j--;\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<            }\>\"", ",", " ", "\[IndentingNewLine]", "\"\<\>\"", 
     ",", " ", "\[IndentingNewLine]", "\"\<            if (j == 0) {\>\"", 
     ",", " ", "\[IndentingNewLine]", 
     "\"\<                // all children are ready\>\"", ",", " ", 
     "\[IndentingNewLine]", 
     "\"\<                const int kch = ((nnodesd - 1) - k) * order;\>\"", 
     ",", " ", "\[IndentingNewLine]", "\"\<                cm = 0;\>\"", ",", 
     " ", "\[IndentingNewLine]", "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<                const register int sortedCell = \
MindexSortd[(nnodesd - 1) - k];\>\"", " ", ",", "\[IndentingNewLine]", 
     "\"\<\>\""}], "\[IndentingNewLine]", "}"}], "~", "Join", "~", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", ">", "1"}], ",", 
     RowBox[{"{", "\"\<                cen = Mposd[sortedCell];\>\"", "}"}], 
     ",", 
     RowBox[{"{", "\"\<\>\"", "}"}]}], "]"}], "~", "Join", "~", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<                const int2 chdPair = Mchildd[sortedCell];\>\"", ",", 
     "\[IndentingNewLine]", "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<                for (i = 0; i < 2; i++)\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<                {\>\"", ",", " ", 
     "\[IndentingNewLine]", 
     "\"\<                    //computation of ch = child[k*2+i]\>\"", ",", 
     " ", "\[IndentingNewLine]", 
     "\"\<                    const int chd = i * chdPair.y + (1-i) * \
chdPair.x;\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<                    if (chd >= nbodiesd)\>\"", ",", 
     "\[IndentingNewLine]", "\"\<                    {\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<                         ch = chd - nbodiesd;\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<                         const register int sortedBody = \
MmortonCodesIdxd[ch];\>\"", ",", "\[IndentingNewLine]", 
     "\"\<                         mom0 = real2{ vtxd[sortedBody].z, (real)0 \
};\>\""}], "\[IndentingNewLine]", "}"}], "~", "Join", "~", 
   RowBox[{"SetToZero", "[", "n", "]"}], "~", "Join", "~", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"n", ">", "1"}], ",", 
      "\"\<                         dr = real2{vtxd[sortedBody].x, \
vtxd[sortedBody].y} - cen;\>\"", ",", "\"\<\>\""}], "]"}], 
    "\[IndentingNewLine]", "}"}], "~", "Join", "~", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<                         m = 1;\>\"", ",", "\[IndentingNewLine]", 
     "\"\<                    }\>\"", ",", "\[IndentingNewLine]", 
     "\"\<                    else\>\"", ",", "\[IndentingNewLine]", 
     "\"\<                    {\>\"", ",", "\[IndentingNewLine]", 
     "\"\<                         register const int srtT = \
MindexSortTd[chd];\>\"", ",", "\[IndentingNewLine]", 
     "\"\<                         ch = (nnodesd - 1) - srtT;\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<                         const int nch = srtT * order;\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<                         mom0 = real2{ momsd[nch + 0].x, (real)0 };\
\>\""}], "\[IndentingNewLine]", "}"}], "~", "Join", "~", 
   RowBox[{"CopyGtoR", "[", "n", "]"}], "~", "Join", "~", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<                         //for (int s = 1; s < order; ++s)\>\"", ",",
      " ", "\[IndentingNewLine]", 
     "\"\<                         //    mom[s] = momsd[ch * order + s];\>\"",
      ",", " ", "\[IndentingNewLine]", "\"\<\>\""}], "\[IndentingNewLine]", 
    "}"}], "~", "Join", "~", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"n", ">", "1"}], ",", 
      "\"\<                         dr = Mposd[chd] - cen;\>\"", ",", 
      "\"\<\>\""}], "]"}], "\[IndentingNewLine]", "}"}], "~", "Join", "~", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<                         m = massd[nnodesd - 1 - ch];\>\"", ",", " ",
      "\[IndentingNewLine]", "\"\<                     }\>\"", ",", " ", 
     "\[IndentingNewLine]", 
     "\"\<                     // add child's contribution\>\"", ",", " ", 
     "\[IndentingNewLine]", 
     "\"\<                     momsd[kch + 0].x += mom0.x;\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<\>\""}], "\[IndentingNewLine]", "}"}], "~", 
   "Join", "~", 
   RowBox[{"InitRegs", "[", "n", "]"}], "~", "Join", "~", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<                     //for (int p = 1; p < order; ++p)\>\"", ",", 
     " ", "\[IndentingNewLine]", 
     "\"\<                     //    momh[p] = mom[p];\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<\>\""}], "\[IndentingNewLine]", "}"}], "~", 
   "Join", "~", 
   RowBox[{"GenerateShiftFirst", "[", "n", "]"}], "~", "Join", "~", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"GenerateShiftMid", "[", 
        RowBox[{"n", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "2", ",", 
         RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], "~", 
   "Join", "~", 
   RowBox[{"GenerateShiftLast", "[", "n", "]"}], "~", "Join", "~", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<                     //for (int s = 1; s < order; ++s)\>\"", ",", 
     " ", "\[IndentingNewLine]", "\"\<                     //{\>\"", ",", " ",
      "\[IndentingNewLine]", 
     "\"\<                     //    for (int p = s; p < order; ++p)\>\"", 
     ",", " ", "\[IndentingNewLine]", 
     "\"\<                     //        momh[p] += binomCft[p * order + s] * \
multz(mom[p - s], z);\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<                     //    z = multz(z, dr);\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<                     //}\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<\>\""}], " ", "\[IndentingNewLine]", "}"}], 
   "~", "Join", "~", 
   RowBox[{"CopyRtoG", "[", "n", "]"}], "~", "Join", "~", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<                     //for (int p = 1; p < order; ++p)\>\"", ",", 
     " ", "\[IndentingNewLine]", 
     "\"\<                     //    momsd[k * (order)+p] += momh[p];\>\"", 
     ",", " ", "\[IndentingNewLine]", "\"\<\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<                     cm += m;\>\"", ",", " ",
      "\[IndentingNewLine]", "\"\<                }\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<                flag = 1;\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<            }\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<        }\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<        __threadfence();\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<        if (flag != 0) {\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<            massd[nnodesd - 1 - k] = cm;\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<            k += inc;\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<            flag = 0;\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<        }\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<    }\>\"", ",", " ", "\[IndentingNewLine]", 
     "\"\<}\>\""}], "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.9023255320378056`*^9, 3.902325549059804*^9}, {
   3.9023256326566396`*^9, 3.902325947277199*^9}, {3.9023304860981855`*^9, 
   3.9023304875377197`*^9}, 3.9023310724167767`*^9, 3.9023312372897553`*^9, {
   3.9023312795375075`*^9, 3.902331286915626*^9}, {3.902331341477316*^9, 
   3.9023313711852274`*^9}, {3.9023314870588193`*^9, 
   3.9023316597336593`*^9}, {3.902331711162114*^9, 3.90233171923415*^9}, {
   3.902331806081582*^9, 3.9023318101627865`*^9}, 3.902331940518785*^9, {
   3.902332076244795*^9, 3.902332088855893*^9}, {3.9023352384919233`*^9, 
   3.902335371229187*^9}, {3.902335403254958*^9, 3.90233553455646*^9}, {
   3.9023356175572042`*^9, 3.9023356861799603`*^9}, {3.902338545520772*^9, 
   3.9023385811235*^9}, {3.9023386393478756`*^9, 3.902338832923751*^9}, {
   3.9023391208667316`*^9, 3.902339121856518*^9}, {3.9026815797162867`*^9, 
   3.90268160296003*^9}, {3.9026816548722105`*^9, 3.9026818797528706`*^9}, {
   3.9026819164479165`*^9, 3.902682021120226*^9}, {3.902682061808876*^9, 
   3.902682104521514*^9}, {3.902682181006571*^9, 3.902682187144677*^9}, {
   3.9026822281621084`*^9, 3.9026822769002743`*^9}, 3.9026823349695573`*^9, {
   3.9026823723094554`*^9, 3.902682394224592*^9}, {3.9026825790466166`*^9, 
   3.902682589031184*^9}, {3.902682656490239*^9, 3.9026827628507013`*^9}, {
   3.902708651786167*^9, 3.9027086642548113`*^9}, {3.902708719235263*^9, 
   3.9027088442661085`*^9}, {3.9027089157379417`*^9, 3.902709052728793*^9}, {
   3.9027091011968374`*^9, 3.902709173257904*^9}, {3.9027092374158063`*^9, 
   3.9027092394858418`*^9}, {3.9027092823160524`*^9, 
   3.9027092866120625`*^9}, {3.9027093258232594`*^9, 
   3.9027093288625507`*^9}, {3.9027094197483673`*^9, 3.902709459710166*^9}, {
   3.902709786143587*^9, 3.9027098201661067`*^9}, {3.9027098518591585`*^9, 
   3.90270987879393*^9}, {3.9028024831614513`*^9, 3.90280249181852*^9}, {
   3.9028025301378765`*^9, 
   3.902802547437651*^9}},ExpressionUUID->"6ac84ebd-2811-4a87-975f-\
1e5449ae86c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetFooText", "[", "5", "]"}], "//", "TableForm"}], ";"}]], "Input",\

 CellChangeTimes->{{3.9023311145513725`*^9, 3.9023311153041067`*^9}, {
   3.9023312076495357`*^9, 3.902331212650431*^9}, {3.902331310449313*^9, 
   3.902331316793828*^9}, 3.902331771958702*^9, 3.9023321015057*^9, 
   3.9023355692753973`*^9, 3.902335657733704*^9},
 CellLabel->
  "In[422]:=",ExpressionUUID->"1a5d7a0f-9bc9-4813-83a2-ae539b8b3ebd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<ShiftKernels/SummKer\>\"", "<>", 
       RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\<.cu\>\""}], ",", 
      RowBox[{"GetFooText", "[", "#", "]"}], ",", "\"\<Text\>\""}], "]"}], 
    "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "16"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9023255556767044`*^9, 3.9023255565886664`*^9}, {
   3.9023256067044764`*^9, 3.9023256164674416`*^9}, {3.902331076426272*^9, 
   3.9023310768773756`*^9}, {3.9023320277989197`*^9, 3.902332027892927*^9}, {
   3.902332104737791*^9, 3.902332185741355*^9}, {3.9023325281159925`*^9, 
   3.902332528177242*^9}, 3.9023327758286424`*^9, {3.9023358095698586`*^9, 
   3.90233581748886*^9}, 3.9023388985772347`*^9, 3.902339285541459*^9},
 CellLabel->
  "In[423]:=",ExpressionUUID->"db09c3dd-87be-4a3e-8ec4-73a0c70a80c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ShiftKernels/SummKer1.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer2.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer3.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer4.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer5.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer6.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer7.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer8.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer9.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer10.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer11.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer12.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer13.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer14.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer15.cu\"\>", 
   ",", "\<\"ShiftKernels/SummKer16.cu\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9023321863120823`*^9, 3.9023325286674747`*^9, 3.9023326180922756`*^9, 
   3.902332777060937*^9, {3.9023328701350813`*^9, 3.902332888035797*^9}, 
   3.902333184688439*^9, 3.90233554320993*^9, 3.9023357050110545`*^9, 
   3.9023358182710395`*^9, 3.90233883635861*^9, {3.9023388722496214`*^9, 
   3.9023389021417284`*^9}, 3.9023391230775795`*^9, 3.902410513314866*^9, 
   3.9026816328678517`*^9, 3.9026823062409077`*^9, 3.9026823990487337`*^9, 
   3.9027087978962975`*^9, 3.902708845591553*^9, 3.902709175232765*^9, 
   3.9027092182471952`*^9, 3.9027092978939557`*^9, 3.9027093880803223`*^9, 
   3.9027094715895853`*^9, {3.9027095164774513`*^9, 3.9027095440152955`*^9}, 
   3.9027098236014633`*^9},
 CellLabel->
  "Out[423]=",ExpressionUUID->"da80456b-dc9e-4521-b9c2-abf907e7ac6e"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.9023329798854847`*^9},
 CellLabel->
  "In[424]:=",ExpressionUUID->"2ca25c02-4714-488c-833a-ee2c53fd4f27"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.902334587196481*^9, 3.9023346592165813`*^9},
 CellLabel->
  "In[425]:=",ExpressionUUID->"05ab3705-31d3-4688-9b48-3b198700379b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetSwitchText", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"\"\<switch (order)\>\"", ",", "\n", "\"\<{\>\""}], "}"}], "~", 
    "Join", "~", "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<case \>\"", "<>", 
         RowBox[{"TextString", "[", "#", "]"}], "<>", 
         "\"\<:\\n    SummarizationKernel2_\>\"", "<>", 
         RowBox[{"TextString", "[", "#", "]"}], "<>", 
         "\"\<<<<blocks * FACTOR3, THREADS3>>>(nnodesd, nbodiesd, \
(int2*)Mchildd, massd, (real2*)momsd, (real3*)vtxd, MmortonCodesIdxd, \
(real2*)Mposd, MindexSortd, MindexSortTd);\\n    break;\\n\>\""}], ")"}], 
       "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "16"}], "]"}]}], ")"}], "~", "Join", "~", "\n", 
    RowBox[{"{", "\"\<}\>\"", "\[IndentingNewLine]", "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9023350516161427`*^9, 3.9023350662562914`*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"e0b1cb8a-9040-4c4b-9667-93785473acc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<ShiftKernels/SwitchKer.cu\>\"", ",", 
   RowBox[{"GetSwitchText", "[", "16", "]"}], ",", "\"\<Text\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9023345513757167`*^9, 3.9023349915887628`*^9}, {
   3.902335034884413*^9, 3.902335072282395*^9}, {3.902335830161479*^9, 
   3.9023358363437185`*^9}, {3.9023388622936716`*^9, 3.902338870781617*^9}, 
   3.902339279438455*^9},
 CellLabel->
  "In[427]:=",ExpressionUUID->"b3995c6f-3687-4eb1-81ca-18bd9519da48"],

Cell[BoxData["\<\"ShiftKernels/SwitchKer.cu\"\>"], "Output",
 CellChangeTimes->{
  3.9023348116502733`*^9, 3.9023348533367834`*^9, 3.902334916534129*^9, {
   3.902334972182415*^9, 3.9023349931342506`*^9}, 3.9023350726295924`*^9, 
   3.9023355432429314`*^9, 3.9023358368462377`*^9, 3.902338836389611*^9, 
   3.9023388722876215`*^9, 3.9023391231155796`*^9, 3.9024105133578653`*^9, 
   3.9026816328991227`*^9, 3.9026823063074594`*^9, 3.9026823990843916`*^9, 
   3.902708797913171*^9, 3.902708845629384*^9, 3.9027091752515755`*^9, 
   3.9027092182961955`*^9, 3.902709297943589*^9, 3.9027093881126823`*^9, 
   3.902709471623375*^9, {3.9027095165131083`*^9, 3.9027095440476995`*^9}, 
   3.9027098236425653`*^9},
 CellLabel->
  "Out[427]=",ExpressionUUID->"a0ffe1d8-f329-4149-a35c-39b570edb723"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.902339015111244*^9},
 CellLabel->
  "In[428]:=",ExpressionUUID->"73c49cd6-d8e5-4835-a05f-92803087d4c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetIncludeText", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\"\<#include \\\"ShiftKernels/SummKer\>\"", "<>", 
      RowBox[{"TextString", "[", "#", "]"}], "<>", "\"\<.cu\\\"\>\""}], ")"}],
     "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "n"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9023390216921463`*^9, 3.902339032059654*^9}, {
  3.9023392895472927`*^9, 3.902339326790298*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"34ed2023-812d-4fec-a8d7-2092a6412b60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<ShiftKernels/IncludeKer.cu\>\"", ",", 
   RowBox[{"GetIncludeText", "[", "16", "]"}], ",", "\"\<Text\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.90233933682861*^9, 3.9023393437336893`*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"b5785f96-1a2e-41e5-8f2c-7795b830c8d4"],

Cell[BoxData["\<\"ShiftKernels/IncludeKer.cu\"\>"], "Output",
 CellChangeTimes->{
  3.902339344287224*^9, 3.9024105133978667`*^9, 3.9026816329303703`*^9, 
   3.902682306358926*^9, 3.902682399114908*^9, 3.902708797947259*^9, 
   3.902708845665381*^9, 3.902709175284071*^9, 3.9027092183316708`*^9, 
   3.902709297978059*^9, 3.902709388145791*^9, 3.902709471656994*^9, {
   3.9027095165459003`*^9, 3.9027095440831327`*^9}, 3.9027098236595*^9},
 CellLabel->
  "Out[430]=",ExpressionUUID->"4e0b50e3-62e6-4557-bca2-4640bb30c0a5"]
}, Open  ]]
},
WindowSize->{1141.2, 580.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"SlideshowSettings" -> <|"Toolbar" -> True|>|>,
Magnification:>0.7 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a77859dd-de6c-4ef2-ab10-8a307604dd77"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 248, 5, 30, "Input",ExpressionUUID->"3e00c41d-0e7f-4aad-830e-4c05c869689a"],
Cell[831, 29, 761, 12, 23, "Output",ExpressionUUID->"0375c954-240d-4f6e-800e-18a574bd8070"]
}, Open  ]],
Cell[1607, 44, 511, 13, 30, "Input",ExpressionUUID->"51d43e12-c393-4a76-93a9-0edff96144c2"],
Cell[2121, 59, 297, 6, 21, "Input",ExpressionUUID->"36e228cd-8225-454d-937f-33b3d7f70acb"],
Cell[2421, 67, 713, 18, 30, "Input",ExpressionUUID->"a427fbef-7683-4bfb-9c1e-69540331444b"],
Cell[3137, 87, 288, 6, 21, "Input",ExpressionUUID->"3fd0082f-7360-43f2-b288-5e7225c43dfb"],
Cell[3428, 95, 1138, 28, 30, "Input",ExpressionUUID->"c553399b-4712-4f19-b0a4-c57faa318b0a"],
Cell[4569, 125, 338, 7, 21, "Input",ExpressionUUID->"7a7b9cd7-66f6-43c1-ace7-6b264924bdfb"],
Cell[4910, 134, 649, 15, 30, "Input",ExpressionUUID->"dd91bd49-a79c-4212-91a9-b44ce99a26d8"],
Cell[5562, 151, 288, 6, 21, "Input",ExpressionUUID->"8b229178-983c-4219-82bd-97139638a3f1"],
Cell[5853, 159, 1605, 36, 144, "Input",ExpressionUUID->"f2069ed7-ce10-48d0-8995-581ec7cb028a"],
Cell[7461, 197, 296, 6, 21, "Input",ExpressionUUID->"9b4d96be-8f72-404c-87ad-47b6ebcc1fe3"],
Cell[7760, 205, 2675, 59, 171, "Input",ExpressionUUID->"27474f31-cc01-4492-93aa-ddca25ac88bc"],
Cell[10438, 266, 177, 3, 21, "Input",ExpressionUUID->"91e0be06-e0bc-4c9f-a249-5c3782022b4e"],
Cell[10618, 271, 374, 8, 21, "Input",ExpressionUUID->"f18032f9-aeef-4e7b-8311-19b9a9728709"],
Cell[10995, 281, 511, 14, 21, "Input",ExpressionUUID->"0cd7b9dd-841c-4d40-b66b-3159d7441458"],
Cell[11509, 297, 1033, 22, 95, "Input",ExpressionUUID->"98972aa3-88ec-4301-9b72-a617a1a28aab"],
Cell[12545, 321, 298, 6, 21, "Input",ExpressionUUID->"69ba53d8-6eff-4790-a028-c374bd8a1c4d"],
Cell[12846, 329, 682, 17, 30, "Input",ExpressionUUID->"bef774a4-b770-4f8b-a8aa-51a41988738c"],
Cell[13531, 348, 285, 6, 21, "Input",ExpressionUUID->"b5cc5c54-e0a7-4ec4-b852-d505fbe163f7"],
Cell[13819, 356, 170, 3, 34, "Input",ExpressionUUID->"1020a3e5-0eb7-4a04-9931-15509a83ad2b"],
Cell[13992, 361, 17954, 305, 2507, "Input",ExpressionUUID->"6ac84ebd-2811-4a87-975f-1e5449ae86c8"],
Cell[31949, 668, 463, 10, 30, "Input",ExpressionUUID->"1a5d7a0f-9bc9-4813-83a2-ae539b8b3ebd"],
Cell[CellGroupData[{
Cell[32437, 682, 940, 19, 44, "Input",ExpressionUUID->"db09c3dd-87be-4a3e-8ec4-73a0c70a80c6"],
Cell[33380, 703, 1578, 30, 50, "Output",ExpressionUUID->"da80456b-dc9e-4521-b9c2-abf907e7ac6e"]
}, Open  ]],
Cell[34973, 736, 172, 3, 34, "Input",ExpressionUUID->"2ca25c02-4714-488c-833a-ee2c53fd4f27"],
Cell[35148, 741, 175, 3, 21, "Input",ExpressionUUID->"05ab3705-31d3-4688-9b48-3b198700379b"],
Cell[35326, 746, 1110, 26, 159, "Input",ExpressionUUID->"e0b1cb8a-9040-4c4b-9667-93785473acc6"],
Cell[CellGroupData[{
Cell[36461, 776, 509, 10, 30, "Input",ExpressionUUID->"b3995c6f-3687-4eb1-81ca-18bd9519da48"],
Cell[36973, 788, 788, 12, 23, "Output",ExpressionUUID->"a0ffe1d8-f329-4149-a35c-39b570edb723"]
}, Open  ]],
Cell[37776, 803, 170, 3, 34, "Input",ExpressionUUID->"73c49cd6-d8e5-4835-a05f-92803087d4c4"],
Cell[37949, 808, 558, 14, 30, "Input",ExpressionUUID->"34ed2023-812d-4fec-a8d7-2092a6412b60"],
Cell[CellGroupData[{
Cell[38532, 826, 332, 7, 30, "Input",ExpressionUUID->"b5785f96-1a2e-41e5-8f2c-7795b830c8d4"],
Cell[38867, 835, 523, 8, 23, "Output",ExpressionUUID->"4e0b50e3-62e6-4557-bca2-4640bb30c0a5"]
}, Open  ]]
}
]
*)

